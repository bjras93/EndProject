@model LifeStruct.Controllers.UserData
@using System.Globalization
@using LifeStruct.Models;
@using LifeStruct.Models.Account
@{
    ViewBag.Title = "Welcome!";
    var user = UserViewModel.GetCurrentUser();
    decimal gain = new decimal();

}
@section Signout{
    @Html.Partial("~/Views/Shared/_logout.cshtml")
}
<input type="hidden" id="userId" value="@user.Id" />
<input type="hidden" id="dietId" value="@user.DietId" />
<div class="type-1">
    <a href="/Account/Details">
        <div class="tile g3">
            <span class="icon-user"></span>
            <div class="hover hide">Profile - Update your weight</div>
        </div>
    </a>
    <div id="goal" class="tile g4">
        <span class="icon-checkered-flag"></span>
        <div class="hover hide">What is your goal?</div>
    </div>
    <div class="goal hide">
        <div onclick="update.set('@(user.Id)_1', 'Goal', this)" id="goal1" class="tile goal-index g2">
            <span class="icon-arrow-up"></span>
            <div class="hover hide">To gain weight</div>
        </div>
        <div onclick="update.set('@(user.Id)_2', 'Goal', this)" id="goal2" class="tile goal-index g2">
            <span class="icon-loop2"></span>
            <div class="hover hide">To maintain current weight</div>
        </div>
        <div onclick="update.set('@(user.Id)_3', 'Goal', this)" id="goal3" class="tile goal-index g2">
            <span class="icon-arrow-down"></span>
            <div class="hover hide">To lose weight</div>
        </div>
    </div>
</div>
<div class="type-2">
    <a href="../Statistics/index">
        <div class="tile left g6" onmouseover="progress.mouseOver('.intakeHover', '.totalIntake');" onmouseleave="progress.mouseOver('.totalIntake','.intakeHover');">
            <div class="totalIntake">
                @if (!string.IsNullOrEmpty(user.DietId))
            {

                    <p id="gain"></p>
                }
                @if (!string.IsNullOrEmpty(user.FitnessId))
            {
                    <p id="loss"></p>
                }
                <p id="total"></p>
            </div>
            <span class="icon-pie-chart intakeHover">
            </span>
        </div>
    </a>
    <a href="/Videos/Index">
        <div class="tile r2">
            <span class="icon-play3"></span>
            <div class="hover hide">Submit and find inspirational videos</div>
        </div>
    </a>
    <a href="/Fitness/Index">
        <div class="tile orange4">
            <span class="icon-sports-shoe"></span>
            <div class="hover hide">Create and find workout schedules</div>
        </div>
    </a>
    <a href="/Diets/Index">
        <div class="tile b1">
            <span class="icon-lunch"></span>
            <div class="hover hide">Find your diet</div>
        </div>
    </a>
    <a href="/Health/Index">
        <div class="tile r1">
            <span class="icon-pencil"></span>
            <div class="hover hide">Articles written by users</div>
        </div>
    </a>
    @if (!string.IsNullOrEmpty(user.DietId))
    {

        TimeSpan dateResult;
        dateResult = DateTime.Now - Convert.ToDateTime(user.DietDate);
        var week = Math.Ceiling(dateResult.TotalDays / 7);
        <div class="tile-5 b1 border">
            <div class="explain">
                <div class="con">
                    <h3>Diet for @DateTime.Now.DayOfWeek</h3>
                    <p>Finished:</p> <span class="done border"></span> <p>Unfinished:</p> <span class="undone border"></span>
                </div>
            </div>
            <table class="progress">

                <thead>
                    <tr>
                        @foreach (var m in Model.Meals)
                        {
                            if (Model.MealCollection.Any(x => x.Meal.ToString() == m.Id && ((DayOfWeek)x.Day) == DateTime.Now.DayOfWeek && x.WeekNo == week))
                            {
                                <th>@m.Name</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @foreach (var m in Model.Meals)
                        {

                            if (Model.MealCollection.Any(x => x.Meal.ToString() == m.Id))
                            {
                                <td>
                                    @foreach (var mc in Model.MealCollection.Where(x => ((DayOfWeek)x.Day) == DateTime.Now.DayOfWeek))
                                    {

                                        if (mc.Meal.ToString() == m.Id)
                                        {
                                            if (mc.WeekNo == week)
                                            {
                                                var f = LifeStruct.Controllers.HomeGet.GetFoodById(mc.FoodId);
                                                var intake = (Convert.ToDouble(f.Calories) / 100) * Convert.ToDouble(mc.Amount);
                                                var dp = LifeStruct.Controllers.HomeGet.GetProgress(user.Id, mc.DietId, mc.FoodId, intake.ToString(), mc.Meal);


                                                foreach (var d in dp)
                                                {
                                                    gain += (int)Convert.ToDecimal(d.CalorieIntake);
                                                }
                                                <table onclick="progress.addDietProgress(event, '@f.Id', '@mc.DietId', '@intake', '@user.Id', '@mc.Meal')" class="parent @if (dp.Any()) { <text>done</text>}" data-dietprogress="@if (dp.Count() > 0) { <text>@dp.First().Id</text>}" href="" title="Add to day">
                                                    <tr>
                                                        <td>
                                                            <p>@f.Name</p>
                                                        </td>
                                                        <td>
                                                            <div>@Math.Round(intake) kcal</div>
                                                            <div>@mc.Amount gram</div>
                                                        </td>
                                                    </tr>
                                                </table>
                                            }

                                        }

                                    }
                                </td>
                            }
                        }
                    </tr>

                    @if (Model.MealCollection.All(x => ((DayOfWeek) x.Day - 1) != DateTime.Now.DayOfWeek))
                    {

                        <tr class="nobackground">
                            <td>
                                <h3>No meals today</h3>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <input type="hidden" id="gain" value="@gain" />
        </div>
    }
    @if (!string.IsNullOrEmpty(user.FitnessId))
    {
        var dateResult = DateTime.Now - Convert.ToDateTime(user.FitnessDate);
        var week = Math.Ceiling(dateResult.TotalDays / 7);
        <div class="home-fitness g3 border-no-top border">

            <div class="explain">
                <div class="con">
                    <h3>Workout for @DateTime.Now.DayOfWeek</h3>
                    <p>Finished:</p> <span class="done border"></span> <p>Unfinished:</p> <span class="undone border"></span>
                </div>
            </div>
            <div class="clear"></div>

            @foreach (var exercise in Model.Schedule.Where(x => ((DayOfWeek)x.Day) == DateTime.Now.DayOfWeek))
            {
            <div class="home-exercise @if (Model.FitnessProgress.Any(x => x.ExerciseId == exercise.Id)) {<text>done</text> }" onclick="progress.addFitnessProgress(event, '@exercise.Id', '@Model.Fitness.Id', '@((Convert.ToDecimal(exercise.Calories)/60)*Convert.ToDecimal(exercise.Time))', '@Model.Fitness.UserId')"  data-fitnessprogress="@if(Model.FitnessProgress.Any(x => x.ExerciseId == exercise.Id)) {<text>@Model.FitnessProgress.First(x => x.ExerciseId == exercise.Id).Id</text>}">
                <div>
                        @exercise.Exercise
                </div>
                <div>
                    <p>
                        @exercise.Time minutes
                    </p>
                    <p>
                        @((Convert.ToDecimal(exercise.Calories)/60) * Convert.ToDecimal(exercise.Time)) kcal loss
                    </p>
                </div>
            </div>
            }
            @if(Model.Schedule.Any(x => ((DayOfWeek)x.Day - 1) == DateTime.Now.DayOfWeek))
            {
                <div>
                    <h3>There are no exercises today</h3>
                </div>
            }
            <div class="clear"></div>
        </div>
    }
</div>
<div class="mood-overlay">
    <div class="mood">
        <h3>Hello @user.Name.Split(' ')[0]</h3>
    <p>What is your mood today?</p>
    <span onclick="update.set('@(user.Id)_1', 'Mood', this)" class="icon-neutral-face"></span>
        <span onclick="update.set('@(user.Id)_2', 'Mood', this)" class="icon-smiling-face"></span>
    <span onclick="update.set('@(user.Id)_3', 'Mood', this)" class="icon-sad-face"></span>
</div>
</div>
<script src="~/Content/JS/layout/progress.js"></script>
<script src="~/Content/JS/layout/hover.js"></script>
<script src="~/Content/JS/layout/update.js"></script>
<script>
    progress.init();
    update.get('@user.Id');
</script>